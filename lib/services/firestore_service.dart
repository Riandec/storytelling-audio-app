import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:storytelling_audio_app/models/story.dart';

class FirestoreService {
  final FirebaseFirestore _db = FirebaseFirestore.instance;
  late final CollectionReference<Story> _storiesRef;

  FirestoreService() {
    _storiesRef = _db.collection('Stories').withConverter<Story>(
      fromFirestore: (snapshot, _) => Story.fromFirestore(snapshot),
      toFirestore: (story, _) => story.toFirestore(),
    );
  }

  // CREATE
  Future<void> createStory(Story story) async {
    try {
      // document id generated by the provider
      await _storiesRef.doc(story.id).set(story);
    } catch (e) {
      print('Error creating story: $e');
    }
  }

  // READ:
  Stream<List<Story>> getStoriesStream() {
    return _storiesRef.orderBy('title').snapshots().map((snapshot) {
      return snapshot.docs.map((doc) => doc.data()).toList();
    });
  }

  // UPDATE
  Future<void> updateStory(String storyId, Map<String, dynamic> data) async {
    try {
      await _storiesRef.doc(storyId).update(data);
    } catch (e) {
      print('Error updating story: $e');
    }
  }

  // DELETE
  Future<void> deleteStory(String storyId) async {
    try {
      await _storiesRef.doc(storyId).delete();
    } catch (e) {
      print('Error deleting story: $e');
    }
  }
}